security:
    encoders:
        App\Entity\User:
            algorithm: auto
        App\Entity\UserPro:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        user_provider:
            entity:
                class: App\Entity\User
                property: email
        userpro_provider:
            entity:
                class: App\Entity\UserPro
                property: siret

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/     #Pas de pare-feu actif sur ces adresses, pour permettre le développement.
            security: false
        user_security:                                      #Le reste est protégé par ce pare-feu...
            pattern: ^/login/
            anonymous: true
            provider: user_provider
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                # where to redirect after logout
                target: /
        userpro_security:                                   #... et celui-ci.
            pattern: ^/loginpro/
            anonymous: true
            provider: userpro_provider
            form_login:
                login_path: app_loginpro
                check_path: app_loginpro
            logout:
                path: app_logout
                # where to redirect after logout
                target: /

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_USERPRO]



